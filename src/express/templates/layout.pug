doctype html
html(lang='ru')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width,initial-scale=1')
    meta(name='description' content='Личный блог Типотека')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    title Типотека
    link(rel='preload' href='/fonts/Inter-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/Inter-Medium.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/SFProDisplay-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='stylesheet' href='/css/style.min.css')
    style.
      .server-error{
        color: tomato;
        margin: 5px 0;
        padding-left: 63px;
      }
      .pagination {
        justify-content: center;
      }
      li.pagination__item--active a{
        pointer-events: none;
      }
      .preview__breadcrumbs, .new-publication__checkbox {
        flex-wrap: wrap;
      }
      .new-publication__checkbox label {
        margin: 0 5px 5px 0;
      }
      .notes__item-text {
        padding-right: 35px;
      }
      .comments__none {
        padding-left: 40px;
      }
      .notes__item-buttons {
        display: flex;
        justify-content: flex-end;
      }
      .notes__item-buttons .button {
        margin: 10px;
      }
      .notes__item-buttons .button.red {
        color: red;
        font-weight: bold;
      }
      .publication__text-strong {
        margin: 0;
      }
      .post__head .preview__breadcrumbs {
        padding-left: 0;
      }
      .post__announce {
        font-style: italic;
        margin-bottom: 20px;
      }
      .comments__footer--non-user {
        display: flex;
        justify-content: space-between;
      }
      .avatar {
        background: none;
      }
      .header {
        padding-bottom: 0;
      }
      .owner-menu {
        display: flex;
        justify-content: flex-end;
        padding: 10px 30px 40px 30px;
        min-height: 30px;
      }
      .add_post__button, .edit_post__button {
        width: 200px;
      }
      .edit_post__button {
        font-size: 15px;
      }
      .post__head .preview__breadcrumbs {
        margin-top: 10px;
      }
  body
    -
      const formatPostDate = (dateString) => {
        const date = new Date(dateString);
        return moment(date).format('DD.MM.YYYY');
      }
    mixin postDate(dateString)
      time.post__date(datetime='2019-03-21T20:33') #{formatPostDate(dateString)}
    mixin commentDate(dateString)
      -
        const formatCommentDate = (dateString) => {
          let date = new Date(dateString);
          return moment(date).format('DD.MM.YYYY, HH:MM');
        }
      time.comments__date(datetime='2019-03-21T20:33') #{formatCommentDate(dateString)}
    mixin todayDate()
      -
        const dateNow = new Date().toISOString().slice(0, 10)
      label(for='new-publication-date' aria-label='Календарь')
      input#new-publication-date(type='text' name='createDate' placeholder=dateNow value=dateNow)
    mixin editArticleDate(dateString)
      -
        const dateNow = new Date(dateString).toISOString().slice(0, 10)
      label(for='new-publication-date' aria-label='Календарь')
      input#new-publication-date(type='text' name='createDate' placeholder=dateNow value=dateNow)
    mixin pagination(page, totalPages, width, prefix)
      -
        let start = page - width;
        let end = page + width;

        if(start < 1){
          end += 1 - start;
          start = 1;
        }

        if(end > totalPages){
          start -= end - totalPages;
          end = totalPages;
        }

        if(start < 1){
          start = 1;
        }
        let i = start - 1

      .preview__toggle-wrapper
        ul.preview__pagination.pagination
          if start > 1
            li
              a.pagination__button.button.button--backwards(href=`${prefix}page=${page - 1}` aria-label='Страница назад') Назад
          while i++ < end
            if i === page
              li.pagination__item.pagination__item--active
                a(href=`${prefix}page=${i}`)= i
            else
              li.pagination__item
                a(href=`${prefix}page=${i}`)= i
          if end < totalPages
            li
              a.pagination__button.button.button--forward(href=`${prefix}page=${page + 1}`) Вперёд
    mixin insertErrorMessages(messages)
      if messages
        each message in messages
          .server-error= message
    .wrapper
      include partials/header.pug
      block content
      include partials/footer.pug
    script(src='/js/vendor.js')
    script(src='/js/main.js')
